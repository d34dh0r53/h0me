- name: LunarVIM
  hosts: localhost
  remote_user: ansible
  become: false
  gather_facts: yes
  vars:
    asdf_plugins:
      - python
      - nodejs
    asdf_python_versions:
      - 3.11.3
      - 2.7.18
    package_map:
      centos:
        - openssl-devel
        - zlib-devel
        - libffi-devel
        - bzip2-devel
        - ncurses-devel
        - readline-devel
        - sqlite-devel
        - xz-devel

      ubuntu:

      Fedora:
        - openssl-devel
        - zlib-devel
        - libffi-devel
        - bzip2-devel
        - ncurses-devel
        - readline-devel
        - sqlite-devel
        - xz-devel
        - patch

  tasks:
    - name: Install dependent packages
      package:
        name: "{{ package_name }}"
        state: present
      loop: "{{ package_map[ansible_distribution] }}"
      loop_control:
        loop_var: package_name
      become: yes
      become_user: root
 
    - name: Install Homebrew
      shell: |
        /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
      args:
        creates: "/home/linuxbrew/.linuxbrew"
      environment:
        PATH: "{{ ansible_env.PATH }}"
        NONINTERACTIVE: 1

    - name: Make brew_path executable
      file:
        path: /usr/bin/brew_path
        owner: root
        group: root
        mode: 0755
        state: touch
      become: true
      remote_user: root

    - name: Create brew_path script
      blockinfile:
        path: /usr/bin/brew_path
        block: |
          test -d ~/.linuxbrew && eval "$(~/.linuxbrew/bin/brew shellenv)"
          test -d /home/linuxbrew/.linuxbrew && eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
          test -r ~/.bash_profile && echo "eval \"\$($(brew --prefix)/bin/brew shellenv)\"" >> ~/.bash_profile
          echo "eval \"\$($(brew --prefix)/bin/brew shellenv)\"" >> ~/.profile
      become: true
      remote_user: root

    - name: Install Neovim
      community.general.homebrew:
        name: neovim
        path: /usr/local/bin
        state: present

    - name: Install asdf
      community.general.homebrew:
        name: asdf
        state: present

    - name: Add asdf and completions to .bashrc
      shell: |
        echo -e "\n. \"$(brew --prefix asdf)/libexec/asdf.sh\"" >> {{ ansible_env.HOME }}/.bashrc
        echo -e "\n. \"$(brew --prefix asdf)/etc/bash_completion.d/asdf.bash\"" >> {{ ansible_env.HOME }}/.bashrc

    - name: Install asdf plugins for python and node
      shell: |
        asdf plugin add {{ asdf_plugin }}
      args:
        creates: "{{ ansible_env.HOME }}/.asdf/plugins/{{ asdf_plugin }}"
      loop: "{{ asdf_plugins }}"
      loop_control:
        loop_var: asdf_plugin

    - name: Install python version(s) with asdf
      shell: |
        asdf install python {{ asdf_python_version }}
      args:
        creates: "{{ ansible_env.HOME }}/.asdf/installs/{{ asdf_python_version }}"
      loop: "{{ asdf_python_versions }}"
      loop_control:
        loop_var: asdf_python_version
